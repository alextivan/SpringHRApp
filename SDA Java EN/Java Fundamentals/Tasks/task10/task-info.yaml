type: edu
files:
- name: src/Task.java
  visible: true
  placeholders:
  - offset: 151
    length: 31
    placeholder_text: // Implement your solution here
    initial_state:
      length: 31
      offset: 151
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      int number = scanner.nextInt();

              for (int i = 1; i <= number; i++) {
                  if (number % i == 0) {
                      System.out.println(i);
                  }
              }
  text: |-
    import java.util.Scanner;

    public class Task {
        public static void main(String[] args) {
            Scanner scanner = new Scanner(System.in);

            // Implement your solution here
        }
    }
  learner_created: false
- name: test/Tests.java
  visible: false
  text: |-
    import org.junit.After;
    import org.junit.Before;
    import org.junit.Test;

    import java.io.ByteArrayInputStream;
    import java.io.ByteArrayOutputStream;
    import java.io.InputStream;
    import java.io.PrintStream;

    import static org.junit.Assert.assertEquals;

    public class Tests {

        private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();
        private final ByteArrayOutputStream errContent = new ByteArrayOutputStream();
        private final PrintStream originalOut = System.out;
        private final PrintStream originalErr = System.err;
        private final InputStream originalIn = System.in;

        @Before
        public void setUpStreams() {
            System.setOut(new PrintStream(outContent));
            System.setErr(new PrintStream(errContent));
        }

        @After
        public void restoreStreams() {
            System.setOut(originalOut);
            System.setErr(originalErr);
            System.setIn(originalIn);
        }

        @Test
        public void testSolution() {
            String inputText = "21";
            System.setIn(new ByteArrayInputStream(inputText.getBytes()));

            Task.main(new String[]{});

            assertEquals("For the number 21, the program should write in the console the numbers: 1, 3, 7, 21.", "1\n3\n7\n21", outContent.toString().trim().replaceAll("\r\n", "\n"));
        }

        @Test
        public void testSolution2() {
            String inputText = "49";
            System.setIn(new ByteArrayInputStream(inputText.getBytes()));

            Task.main(new String[]{});

            assertEquals("For the number 49, the program should write in the console the numbers: 1, 7, 49.", "1\n7\n49", outContent.toString().trim().replaceAll("\r\n", "\n"));
        }

        @Test
        public void testSolution3() {
            String inputText = "1024";
            System.setIn(new ByteArrayInputStream(inputText.getBytes()));

            Task.main(new String[]{});

            assertEquals("For the number 1024, the program should write to the console the numbers: 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024.", "1\n2\n4\n8\n16\n32\n64\n128\n256\n512\n1024", outContent.toString().trim().replaceAll("\r\n", "\n"));
        }

    }
  learner_created: false
status: Unchecked
record: -1
